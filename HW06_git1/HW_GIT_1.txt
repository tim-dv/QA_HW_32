/c/Users/Tim_DV/Git

1. Создайте текстовый файл как в первом ДЗ по Terminal.
2. Сценарий перенесите в этот файл.
3. На против каждого действия - напишите команду в GitBash

Файл со сценарием и ссылку на свой гит хаб отправляйте менторам на проверку.
=========================================================================

JSON

"4. Создать внешний репозиторий c названием JSON ->" 
	В хедере на главной странице справа нажать "+" ->
	-> В выпадающем dropdawn выбрать "New repository" ->
	-> В обязательном поле "Repository name" ввести "JSON" ->
	-> Внизу страницы нажать кнопку "Create repository"	

"5. Клонировать репозиторий JSON на локальный компьютер ->"
	git clone https://github.com/tim-dv/JSON.git

"6. Внутри локального JSON создать файл “new.json”. ->"
	cd JSON && touch new.json

"7. Добавить файл под гит. ->"
	git add new.json

"8. Закоммитить файл. ->"
	git commit -m "init: new.json create"

"9. Отправить файл на внешний GitHub репозиторий. ->"
	git push

"10. Отредактировать содержание файла “new.json” - написать информацию о 
себе (ФИО, возраст, количество домашних животных, будущая желаемая 
зарплата). Всё написать в формате JSON. ->"
	vim new.json ->
	-> Нажать кнопку "I" на клавиатуре ->
	-> Ввести необходимый текст ->
	-> Ввести ":wq", нажать "Enter"

"11. Отправить изменения на внешний репозиторий. ->"
	git status ->
	-> git add new.json ->
	-> git commit -m "feat: add information to new.json" ->
	-> git push

"12. Создать файл preferences.json ->"
	touch preferences.json

"13. В файл preferences.json добавить информацию о своих предпочтениях 
(Любимый фильм, любимый сериал, любимая еда, любимое время года, 
сторона которую хотели бы посетить) в формате JSON. ->"
	vim preferences.json ->
	-> Нажать кнопку "I" на клавиатуре ->
	-> Ввести необходимый текст ->
	-> Ввести ":wq", нажать "Enter"

"14. Создать файл sklls.json добавить информацию о скиллах которые 
будут изучены на курсе в формате JSON ->"
	touch skills.json ->
	-> vim skills.json ->
	-> Нажать кнопку "I" на клавиатуре ->
	-> Ввести необходимый текст ->
	-> Ввести ":wq", нажать "Enter"

"15. Отправить сразу 2 файла на внешний репозиторий. ->"
	git status ->
	-> git add preferences.json skills.json ->
	-> git commit -am "feat: create preferences.json and skills.json" ->
	-> git push

"16. На веб интерфейсе создать файл bug_report.json. ->"
	Нажать "Add file", выбрать "Create new file" ->
	-> Ввести имя файла 

"17. Сделать Commit changes (сохранить) изменения на веб интерфейсе. ->"
	Ввести данные коммита в разделе "Commit new file" ->
	-> Нажать кнопку "Commit changes"

"18. На веб интерфейсе модифицировать файл bug_report.json, добавить баг 
репорт в формате JSON. ->"
	Кликнуть по имени файла ->
	-> Нажать на иконку "Edit this file" ->
	-> Ввести данные
	
"19. Сделать Commit changes (сохранить) изменения на веб интерфейсе. ->"
	Ввести данные коммита в разделе "Commit new file" ->
	-> Нажать кнопку "Commit changes"

"20. Синхронизировать внешний и локальный репозиторий JSON ->"
	git pull

=========================================================================

XML

"21. Создать внешний репозиторий c названием XML. ->"
	В хедере на главной странице справа нажать "+" ->
	-> В выпадающем dropdawn выбрать "New repository" ->
	-> В обязательном поле "Repository name" ввести "XML" ->
	-> Внизу страницы нажать кнопку "Create repository"

"22. Клонировать репозиторий XML на локальный компьютер. ->"
	git clone https://github.com/tim-dv/XML.git

"23. Внутри локального XML создать файл “new.xml”. ->"
	cd XML && touch new.xml

"24. Добавить файл под гит. ->"
	git add new.xml

"25. Закоммитить файл. ->"
	git commit -m "init: new.xml create"

"26. Отправить файл на внешний GitHub репозиторий. ->"
	git push

"27. Отредактировать содержание файла “new.xml” - написать информацию о 
себе (ФИО, возраст, количество домашних животных, будущая желаемая 
зарплата). Всё написать в формате XML. ->"
	vim new.xml ->
	-> Нажать кнопку "I" на клавиатуре ->
	-> Ввести необходимый текст ->
	-> Ввести ":wq", нажать "Enter"	 

"28. Отправить изменения на внешний репозиторий. ->"
	git status ->
	-> git add new.xml ->
	-> git commit -m "feat: update new.xml" ->
	-> git push

"29. Создать файл preferences.xml ->"
	touch preferences.xml

"30. В файл preferences.xml добавить информацию о своих предпочтениях 
(Любимый фильм, любимый сериал, любимая еда, любимое время года, сторона 
которую хотели бы посетить) в формате XML. ->"
	vim preferences.xml ->
	-> Нажать кнопку "I" на клавиатуре ->
	-> Ввести необходимый текст ->
	-> Ввести ":wq", нажать "Enter"

"31. Создать файл sklls.xml добавить информацию о скиллах которые будут 
изучены на курсе в формате XML ->"
	touch skills.xml ->
	-> vim skills.xml ->
	-> Нажать кнопку "I" на клавиатуре ->
	-> Ввести необходимый текст ->
	-> Ввести ":wq", нажать "Enter" 

"32. Сделать коммит в одну строку. ->"
	git add . && git commit -am "feat: add info to preferences.xml and skills.xml"

"33. Отправить сразу 2 файла на внешний репозиторий. ->"
	git push

"34. На веб интерфейсе создать файл bug_report.xml. ->"
	Нажать "Add file", выбрать "Create new file" ->
	-> Ввести имя файла	

"35. Сделать Commit changes (сохранить) изменения на веб интерфейсе. ->"
	Ввести данные коммита в разделе "Commit new file" ->
	-> Нажать кнопку "Commit new file"

"36. На веб интерфейсе модифицировать файл bug_report.xml, добавить баг 
репорт в формате XML. ->"
	Кликнуть по имени файла ->
	-> Нажать на иконку "Edit this file" ->
	-> Ввести данные	

"37. Сделать Commit changes (сохранить) изменения на веб интерфейсе. ->"
	Ввести данные коммита в разделе "Commit new file" ->
	-> Нажать кнопку "Commit changes"

"38. Синхронизировать внешний и локальный репозиторий XML ->"
	git pull

=========================================================================

TXT

"39. Создать внешний репозиторий c названием TXT. ->"
	В хедере на главной странице справа нажать "+" ->
	-> В выпадающем dropdawn выбрать "New repository" ->
	-> В обязательном поле "Repository name" ввести "TXT" ->
	-> Внизу страницы нажать кнопку "Create repository"

"40. Клонировать репозиторий TXT на локальный компьютер. ->"
	git clone https://github.com/tim-dv/TXT.git

"41. Внутри локального TXT создать файл “new.txt”. ->"
	cd TXT && touch new.txt

"42. Добавить файл под гит. ->"
	git add new.txt

"43. Закоммитить файл. ->"
	git commit -m "init: new.txt create"

"44. Отправить файл на внешний GitHub репозиторий. ->"
	git push

"45. Отредактировать содержание файла “new.txt” - написать информацию о 
себе (ФИО, возраст, количество домашних животных, будущая желаемая 
зарплата). Всё написать в формате TXT. ->"
	vim new.txt ->
	-> Нажать кнопку "I" на клавиатуре ->
	-> Ввести необходимый текст ->
	-> Ввести ":wq", нажать "Enter"	 

"46. Отправить изменения на внешний репозиторий. ->"
	git status ->
	-> git add new.txt ->
	-> git commit -m "feat: update new.txt" ->
	-> git push

"47. Создать файл preferences.txt ->"
	touch preferences.txt

"48. В файл preferences.txt” добавить информацию о своих предпочтениях 
(Любимый фильм, любимый сериал, любимая еда, любимое время года, сторона 
которую хотели бы посетить) в формате TXT. ->"
	vim preferences.txt ->
	-> Нажать кнопку "I" на клавиатуре ->
	-> Ввести необходимый текст ->
	-> Ввести ":wq", нажать "Enter"

"49. Создать файл sklls.txt добавить информацию о скиллах которые будут 
изучены на курсе в формате TXT ->"
	touch skills.txt ->
	-> vim skills.txt ->
	-> Нажать кнопку "I" на клавиатуре ->
	-> Ввести необходимый текст ->
	-> Ввести ":wq", нажать "Enter"

"50. Сделать коммит в одну строку. ->"
	git add . && git commit -am "feat: update preferences.txt and skills.txt"

"51. Отправить сразу 2 файла на внешний репозиторий. ->"
	git push

"52. На веб интерфейсе создать файл bug_report.txt. ->"
	Нажать "Add file", выбрать "Create new file" ->
	-> Ввести имя файла

"53. Сделать Commit changes (сохранить) изменения на веб интерфейсе. ->"
	Ввести данные коммита в разделе "Commit new file" ->
	-> Нажать кнопку "Commit new file"

"54. На веб интерфейсе модифицировать файл bug_report.txt, добавить баг 
репорт в формате TXT. ->"
	Кликнуть по имени файла ->
	-> Нажать на иконку "Edit this file" ->
	-> Ввести данные	

"55. Сделать Commit changes (сохранить) изменения на веб интерфейсе. ->"
	Ввести данные коммита в разделе "Commit new file" ->
	-> Нажать кнопку "Commit changes"

"56. Синхронизировать внешний и локальный репозиторий TXT ->"
	git pull
